name: CMake

on:
  pull_request:
  push:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download & Install LLVM
      run: |
        sudo apt-get update
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 16 all

    - name: Download & Install python requirements
      working-directory: ${{github.workspace}}
      run: pip install -r requirements.txt

    - name: Load & Setup submodules
      working-directory: ${{github.workspace}}
      run: make submodules

    - name: Setup for Local
      working-directory: ${{github.workspace}}
      run: ./scripts/patches/enable_local.sh

    - name: Configure CMake
      working-directory: ${{github.workspace}}
      # Configure CMake in a 'build/Debug' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ./build/Debug -DCMAKE_BUILD_TYPE=Debug -DLILY_DEBUG=1 -DCMAKE_C_COMPILER=clang-16 -DCMAKE_CXX_COMPILER=clang++-16

    - name: Build
      # Build your program with the given configuration
      working-directory: ${{github.workspace}}
      run: cmake --build ${{github.workspace}}/build/Debug

    - name: Test
      working-directory: ${{github.workspace}}
      run: ./scripts/full_test.sh
  build-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Download & Install LLVM
      run: brew install llvm@16

    - name: Download & Install ZLib
      run: brew install zlib

    - name: Download & Install autoconf, automake, libtool
      run: brew install autoconf automake libtool
    
    - name: Download & Install python requirements
      working-directory: ${{github.workspace}}
      run: pip install -r requirements.txt

    - name: Load & Setup submodules
      working-directory: ${{github.workspace}}
      run: make submodules

    - name: Setup for Local
      working-directory: ${{github.workspace}}
      run: |
        brew install gpatch
        ./scripts/patches/enable_local.sh

    - name: Setup LLVM & Configure CMake
      working-directory: ${{github.workspace}}
      run: |
        export LLVM_DIR=$(brew --prefix llvm@16)
        cmake -B ./build/Debug -DCMAKE_BUILD_TYPE=Debug -DLILY_DEBUG=1 -DCMAKE_C_COMPILER=$(brew --prefix llvm@16)/bin/clang -DCMAKE_CXX_COMPILER=$(brew --prefix llvm@16)/bin/clang++

    - name: Build
      working-directory: ${{github.workspace}}
      run: cmake --build ./build/Debug

    - name: Test
      working-directory: ${{github.workspace}}
      run: ./scripts/full_test.sh
  #  build-windows:
  #    runs-on: windows-latest
  #
  #    steps:
  #    - uses: actions/checkout@v3
  #
  #    - name: Configure CMake
  #      run: cmake -B ${{github.workspace}}\build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
  #
  #    - name: Build
  #      run: cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE}}
  #
  #    - name: Test
  #      working-directory: ${{github.workspace}}\build
  #      run: ctest -C ${{env.BUILD_TYPE}}
